const mongoose = require('mongoose');
const Sentier = require('./models/Sentier');
require('dotenv').config();

// Parcours VTT pour les r√©gions Est et Nord bas√©s sur recherches 2024
const vttParcoursEstNord = [
  {
    nom: "VTT Route Foresti√®re de B√©bour-B√©louve",
    distance: 40.0,
    duree: { heures: 3, minutes: 0 },
    denivele_positif: 516,
    denivele_negatif: 516,
    difficulte: "Difficile",
    type: "VTT",
    region: "Est",
    zone_specifique: "For√™t de B√©bour et B√©louve",
    commune_depart: "La Plaine-des-Palmistes",
    description_complete: "Magnifique parcours VTT √©lectrique de 40 km traversant les for√™ts primaires de B√©bour et de B√©louve. L'itin√©raire emprunte la piste foresti√®re jusqu'au g√Æte de B√©louve offrant un panorama exceptionnel sur le Cirque de Salazie. D√©part √† la Petite Plaine, passage par le Col de B√©bour et travers√©e de la for√™t primaire. Route limit√©e √† 40 km/h, accessible aux VTT √©lectriques.",
    source: "Manawa/EBike Aventures"
  },
  {
    nom: "VTT Travers√©e Saint-Denis √† Saint-Andr√©",
    distance: 36.0,
    duree: { heures: 3, minutes: 0 },
    denivele_positif: 1129,
    denivele_negatif: 1129,
    difficulte: "Tr√®s difficile",
    type: "VTT",
    region: "Nord",
    zone_specifique: "Liaison Nord-Est",
    commune_depart: "Saint-Denis",
    description_complete: "Parcours exigeant reliant Saint-Denis √† Saint-Andr√© avec le plus grand d√©nivel√© de la r√©gion (1129m). Cette travers√©e Nord-Est permet de d√©couvrir les hauts de l'√Æle tout en reliant deux communes importantes. R√©serv√© aux vttistes exp√©riment√©s en excellente condition physique.",
    source: "AllTrails"
  },
  {
    nom: "VTT Circuit Sainte-Clotilde √† Sainte-Marie",
    distance: 36.0,
    duree: { heures: 2, minutes: 30 },
    denivele_positif: 450,
    denivele_negatif: 450,
    difficulte: "Mod√©r√©",
    type: "VTT",
    region: "Nord",
    zone_specifique: "Littoral Nord",
    commune_depart: "Saint-Denis",
    description_complete: "Parcours VTT le plus populaire de Saint-Denis avec une note de 4.1/5. Circuit reliant Sainte-Clotilde √† Sainte-Marie en longeant le littoral nord. Itin√©raire adapt√© aux VTT et VTC, offrant de beaux panoramas c√¥tiers et passages par le Port de Sainte-Marie.",
    source: "AllTrails"
  },
  {
    nom: "VTT Circuit des Hauts de Saint-Andr√©",
    distance: 28.5,
    duree: { heures: 2, minutes: 45 },
    denivele_positif: 680,
    denivele_negatif: 680,
    difficulte: "Mod√©r√©",
    type: "VTT",
    region: "Est",
    zone_specifique: "Hauts de Saint-Andr√©",
    commune_depart: "Saint-Andr√©",
    description_complete: "Parcours d√©couverte des hauts de Saint-Andr√©, porte d'entr√©e vers les for√™ts de l'Est. Circuit organis√© par le Club VCE (V√©lo Club de l'Est) bas√© √† Bras-Panon. Terrain vari√© alternant zones habit√©es et espaces naturels pr√©serv√©s.",
    source: "VCE Bras-Panon"
  },
  {
    nom: "VTT Tour de la Plaine des Palmistes",
    distance: 32.4,
    duree: { heures: 3, minutes: 15 },
    denivele_positif: 520,
    denivele_negatif: 520,
    difficulte: "Mod√©r√©",
    type: "VTT",
    region: "Est",
    zone_specifique: "Plaine des Palmistes",
    commune_depart: "La Plaine-des-Palmistes",
    description_complete: "Circuit VTT dans la r√©gion de la Plaine des Palmistes, organis√© par le CVP (Club V√©lo Palmistes). Parcours √† travers les hauts de l'Est offrant des panoramas sur les for√™ts primaires et les cirques. Terrain accessible aux VTT-XC et route.",
    source: "CVP Plaine des Palmistes"
  },
  {
    nom: "VTT Circuit de Sainte-Rose vers Bois-Blanc",
    distance: 25.7,
    duree: { heures: 2, minutes: 30 },
    denivele_positif: 490,
    denivele_negatif: 490,
    difficulte: "Mod√©r√©",
    type: "VTT",
    region: "Est",
    zone_specifique: "Les alentours de Bois Blanc et Sainte-Rose",
    commune_depart: "Sainte-Rose",
    description_complete: "Circuit dans les hauts de Sainte-Rose, porte d'entr√©e vers le volcan. Parcours organis√© par le VCSR (V√©lo Club Sainte-Rose) alternant zones habit√©es et espaces naturels pr√©serv√©s. Acc√®s vers les hautes plaines volcaniques.",
    source: "VCSR Sainte-Rose"
  }
];

async function importVTTParcoursEstNord() {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Connexion MongoDB √©tablie');
    
    let imported = 0;
    let skipped = 0;
    
    for (const parcours of vttParcoursEstNord) {
      // G√©n√©rer un ID unique bas√© sur le nom
      const randopitons_id = `vtt_est_nord_${parcours.nom.toLowerCase()
        .replace(/[^a-z0-9]/g, '_')
        .replace(/_+/g, '_')
        .slice(0, 50)}`;
      
      // V√©rifier si le sentier existe d√©j√†
      const existingSentier = await Sentier.findOne({ randopitons_id });
      
      if (existingSentier) {
        console.log(`‚ö†Ô∏è Sentier d√©j√† existant: "${parcours.nom}"`);
        skipped++;
        continue;
      }
      
      // G√©n√©rer des coordonn√©es approximatives pour La R√©union
      const regionCoords = {
        'Est': { lng: 55.65, lat: -21.05 },
        'Nord': { lng: 55.45, lat: -20.95 }
      };
      
      const baseCoords = regionCoords[parcours.region] || { lng: 55.55, lat: -21.0 };
      const coords = {
        longitude: baseCoords.lng + (Math.random() - 0.5) * 0.1,
        latitude: baseCoords.lat + (Math.random() - 0.5) * 0.1
      };
      
      const nouveauSentier = new Sentier({
        randopitons_id,
        url: `https://vtt-reunion.com/${randopitons_id}`,
        nom: parcours.nom,
        difficulte: parcours.difficulte,
        type: parcours.type,
        region: parcours.region,
        zone_specifique: parcours.zone_specifique,
        commune_depart: parcours.commune_depart,
        distance: parcours.distance,
        duree: parcours.duree,
        denivele_positif: parcours.denivele_positif,
        denivele_negatif: parcours.denivele_negatif,
        description_complete: parcours.description_complete,
        description_courte: parcours.description_complete.substring(0, 200) + '...',
        point_depart: {
          nom: `D√©part ${parcours.commune_depart}`,
          coordonnees: coords,
          altitude: Math.round(Math.random() * 800 + 200),
          acces_voiture: true,
          parking_disponible: true,
          description_acces: `Point de d√©part accessible depuis ${parcours.commune_depart}`
        },
        points_interet: [],
        equipements_obligatoires: ['VTT', 'Casque', 'Eau'],
        equipements_recommandes: ['Kit de r√©paration', 'Gants', 'Lunettes', 'VTT √©lectrique recommand√©'],
        periode_ideale: {
          debut: 'avril',
          fin: 'novembre'
        },
        conditions_meteo: '√âviter les p√©riodes de pluie intense et cyclonique',
        dangers: ['Passages techniques en for√™t', 'D√©nivel√©s importants', 'Routes foresti√®res √©troites'],
        precautions: ['V√©rifier l\'√©tat du VTT', 'Informer de son itin√©raire', 'Emporter batterie de secours pour VTT √©lectrique'],
        balisage: {
          type: 'Route foresti√®re et sentier VTT',
          etat: 'Bon'
        },
        contacts_urgence: {
          secours_montagne: '02 62 93 37 37',
          gendarmerie: '17',
          pompiers: '18'
        },
        source: parcours.source,
        certification_officielle: false,
        derniere_mise_a_jour_site: new Date(),
        scraped_at: new Date()
      });
      
      await nouveauSentier.save();
      console.log(`‚úÖ Import√©: "${parcours.nom}" (${parcours.distance}km, ${parcours.difficulte})`);
      imported++;
    }
    
    console.log(`\nüìä R√âSULTAT IMPORT VTT EST/NORD:`);
    console.log(`   ‚úÖ ${imported} parcours VTT Est/Nord import√©s`);
    console.log(`   ‚ö†Ô∏è ${skipped} parcours ignor√©s (d√©j√† existants)`);
    
    // Statistiques finales
    const totalVTT = await Sentier.countDocuments({ type: 'VTT' });
    const totalVTTEst = await Sentier.countDocuments({ type: 'VTT', region: 'Est' });
    const totalVTTNord = await Sentier.countDocuments({ type: 'VTT', region: 'Nord' });
    
    console.log(`\nüìà Statistiques VTT:`);
    console.log(`   Total VTT: ${totalVTT} parcours`);
    console.log(`   VTT r√©gion Est: ${totalVTTEst} parcours`);
    console.log(`   VTT r√©gion Nord: ${totalVTTNord} parcours`);
    
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'import:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå D√©connexion MongoDB');
  }
}

// Ex√©cuter l'import
importVTTParcoursEstNord();