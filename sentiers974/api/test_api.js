const mongoose = require('mongoose');
const Sentier = require('./models/Sentier');
require('dotenv').config();

async function testAPI() {
  try {
    console.log('üîó Connexion √† MongoDB...');
    await mongoose.connect('mongodb://localhost:27017/randopitons');
    
    console.log('üìä Tests de requ√™tes...');
    
    const total = await Sentier.countDocuments();
    console.log('Total sentiers en DB:', total);
    
    const sentiers = await Sentier.find({}).limit(500);
    console.log('Sentiers retourn√©s avec limit(500):', sentiers.length);
    
    const sentiersWithRegion = await Sentier.find({region: { $ne: null }}).limit(500);
    console.log('Sentiers avec r√©gion d√©finie:', sentiersWithRegion.length);
    
    const regions = await Sentier.aggregate([
      { $group: { _id: '$region', count: { $sum: 1 } } },
      { $sort: { _id: 1 } }
    ]);
    console.log('R√©partition par r√©gion:');
    regions.forEach(r => console.log(`  - ${r._id || 'NULL'}: ${r.count} sentiers`));
    
    // Test toClientFormat
    if (sentiers.length > 0) {
      console.log('\n‚úÖ Test toClientFormat sur premier sentier:');
      const formatted = sentiers[0].toClientFormat();
      console.log('ID:', formatted.id);
      console.log('Nom:', formatted.nom);
      console.log('R√©gion:', formatted.region);
    }
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Erreur:', error);
    process.exit(1);
  }
}

testAPI();